"""Добавьте в пакет, созданный на семинаре шахматный модуль.
Внутри него напишите код, решающий задачу о 8 ферзях.
Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били друг друга.
Вам дана расстановка 8 ферзей на доске, определите, есть ли среди них пара бьющих друг друга.
Программа получает на вход восемь пар чисел, каждое число от 1 до 8 - координаты 8 ферзей.
Если ферзи не бьют друг друга верните истину, а если бьют - ложь."""

__all__ = ["check_board", "check2queens"]

_queens_placed_true = ((1, 1), (5, 2), (8, 3), (6, 4), (3, 5), (7, 6), (2, 7), (4, 8))#+проверка
_queens_placed_false = ((1, 1), (5, 2), (8, 3), (6, 4), (3, 5), (7, 6), (2, 7), (2, 8))#-проверка


def check2queens(Q1, Q2):
    """
    проверим, бьют ли друг друга две конкретные королевы
    """
    if (abs(Q1[0]-Q1[1]) == abs(Q2[0]-Q2[1]) and abs(Q1[0]+Q1[1]) == abs(Q2[0]+Q2[1])) or \
            Q1[0] == Q2[0] or \
            Q1[1] == Q2[1]:
        return False
    else:
        return True


def check_board(some_tuple):
    """
    :param some_tuple: принимаем кортеж кортежей координат расположения королев на доске
    :return: описание выбранной расстановки
    """
    for num, i in enumerate(some_tuple[:-1]):
        for j in some_tuple[(num+1):]:
            if not check2queens(i, j):
                #print(f"Сменить расстановку, есть пара бьющих друг друга ферзей: {i} и {j}")
                return False
    #print("Королевы расставлены удачно")
    return True


if __name__ == "__main__":
    check_board(_queens_placed_false)
